import random

class Asset:
  def __init__(self, name, tags, cost):
      self.name = name
      self.tags = tags
      self.cost = cost

class Artifact:
  def __init__(self, name, tags):
      self.name = name
      self.tags = tags

class Unique:
  def __init__(self, name, tags):
      self.name = name
      self.tags = tags

class Spell:
  def __init__(self, name, tags):
      self.name = name
      self.tags = tags

class Condition:
  def __init__(self, name, tags):
      self.name = name
      self.tags = tags

delivery_service = Asset("Delivery Service", ["Service", "Service-Teamwork"], 1)
automatic_25 = Asset(".25 Automatic", ["Item", "Weapon"], 1)
scribes_journal = Asset("Scribe's Journal", ["Item", "Tome"], 1)
search_the_archives = Asset("Search the Archives", ["Service"], 2)
otherworld_codex = Asset("Otherworld Codex", ["Item", "Tome"], 2)
hired_muscle = Asset("Hired Muscle", ["Ally"], 2)
ritual_dagger = Asset("Ritual Dagger", ["Item", "Weapon", "Magical Weapon"], 1)
specialist = Asset("Sepcialist", ["Ally"], 3)
kerosene = Asset("Kerosene", ["Item"], 1)
lodge_hunter = Asset ("Lodge Hunter", ["Ally"], 4)
occult_text = Asset ("Occult Text", ["Item", "Tome"], 2)
occult_grimoire = Asset ("Occult Grimoire", ["Item", "Tome"], 3)
lodge_physician = Asset ("Lodge Physician", ["Ally"], 3)
ankh = Asset ("Ankh", ["Item", "Relic"], 3)
timeworn_brand = Asset ("Timeworn Brand", ["Item", "Weapon", "Magical Weapon", "Relic", "Magical Relic", "Magical Relic Weapon"], 1)
lucky_cigarette_case = Asset ("Lucky Cigarette Case", ["Trinket"], 2)
king_james_bible = Asset ("King James Bible", ["Item", "Tome"], 2)
police_raid = Asset ("Police Raid", ["Service"], 3)
agent_of_secrets = Asset ("Agent of Secrets", ["Ally"], 4)
wireless_report = Asset ("Wireless Report", ["Service", "Service-Teamwork"], 1)
fresh_fruit = Asset ("Fresh Fruit", ["Item"], 1)
sledgehammer = Asset ("Sledgehammer", ["Item"], 2)
lucky_talisman = Asset ("Lucky Talisman", ["Trinket", "Relic", "Trinket Relic"], 3)
museum_director = Asset ("Museum Director", ["Ally"], 4)
curiosity_shoppe = Asset ("Curiosity Shoppe", ["Service"], 4)
fine_jewelry = Asset ("Fine Jewelry", ["Trinket"], 1)
rumor_mill = Asset ("Rumor Mill", ["Service"], 1)
holy_water = Asset ("Holy Water", ["Item", "Magical"], 2)
magnifying_glass = Asset ("Magnifying Glass", ["Trinket"], 1)
grim_lexicon = Asset ("Grim Lexicon", ["Item", "Tome"], 2)
lodge_disciple = Asset ("Lodge Disciple", ["Ally"], 4)
tommy_gun = Asset ("Tommy Gun", ["Item", "Weapon"], 3)
axe = Asset ("Axe", ["Item", "Weapon"], 2)
derringer_18 = Asset (".18 Derringer", ["Trinket", "Weapon"], 1)
expedition_guide = Asset ("Expedition Guide", ["Ally"], 2)
chief_inspector = Asset ("Chief Inspector", ["Ally"], 2)
painkillers = Asset ("Painkillers", ["Trinket"], 1)
revolver_38 = Asset (".38 Revolver", ["Item", "Weapon"], 1)
ward_evil = Asset ("Ward Evil", ["Service"], 2)
lantern = Asset ("Lantern", ["Item"], 1)
newspaper_report = Asset ("Newspaper Report", ["Task"], 1)
news_report = Asset ("News Report", ["Service"], 1)
tome_of_secrets = Asset ("Tome of Secrets", ["Item", "Tome"], 3)
occult_scripture = Asset ("Occult Scripture", ["Item", "Tome"], 3)
cultists_journal = Asset ("Cultit's Journal", ["Item", "Tome", "Magical"], 3)
charter_flight = Asset ("Charter Flight", ["Service"], 1)
arcane_scholar = Asset ("Arcane Scholar", ["Ally"], 2)
training_regimen = Asset ("Training Reimen", ["Service"], 2)
map_of_the_lay_lines = Asset ("Map of the Ley Lines", ["Item", "Tome"], 4)
astute_researcher = Asset ("Astute Researcher", ["Ally"], 2)
appeal_to_the_council = Asset ("Appeal to the Council", ["Service"], 1)
flamethrower = Asset ("Flamethrower", ["Item", "Weapon"], 4)
arcane_sutra = Asset ("Arcane Sutra", ["Item", "Tome"], 3)
seek_the_truth = Asset ("Seek the Truth", ["Task"], 1)
protective_amulet = Asset ("Protective Amulet", ["Item"], 1)
private_investigator = Asset ("Private Investigator", ["Ally"], 2)
elder_sign = Asset ("Elder Sign", ["Trinket", "Magical"], 2)
museum_curator = Asset ("Museum Curator", ["Ally"], 3)
conspiracy_theorist = Asset ("Conspiracy Theorist", ["Ally"], 3)
mission_briefing = Asset ("Mission Briefing", ["Service"], 1)
ancient_tome = Asset ("Ancient Tome", ["Item", "Relic", "Tome", "Relic Tome"], 2)
research_student = Asset ("Research Student", ["Ally"], 1)
treasure_hunter = Asset ("Treasure Hunter", ["Ally"], 4)
divination = Asset ("Divination", ["Service"], 1)
gatling_gun = Asset ("Gatling Gun", ["Item", "Weapon"], 4)
witch_doctor = Asset ("Witch Doctor", ["Ally"], 3)
skeleton_keys = Asset ("Skelton Keys", ["Trinket"], 1)
tear_gas = Asset ("Tear Gas", ["Item", "Weapon"], 1)
fishing_net = Asset ("Fishing Net", ["Item"], 2)
intelligence_report = Asset ("Intelligence Report", ["Service"], 3)
grotesque_compendium = Asset ("Grotesque Compendium", ["Item", "Tome"], 4)
investment = Asset ("Investment", ["Task"], 1)
vampiric_talisman = Asset ("Vampiric Talisman", ["Item", "Magical", "Relic", "Magical Relic"], 2)
arcane_manuscripts = Asset ("Arcane Manuscripts", ["Item", "Tome"], 1)
urban_guide = Asset ("Urban Guide", ["Ally"], 4)
three_card_monty = Asset ("Three-Card Monty", ["Service"], 1)
dynamite = Asset ("Dynamite", ["Item", "Weapon"], 3)
dream_diary = Asset ("Dream Diary", ["Item", "Tome"], 1)
blessed_blade = Asset ("Blessed Blade", ["Item", "Weapon", "Magical Weapon", "Relic" "Magical Relic", "Magical Relic Weapon"], 3)
scroll_of_secrets = Asset ("Scroll of Secrets", ["Item", "Tome"], 2)
blunderbuss = Asset ("Blunderbuss", ["Item", "Weapon"], 2)
genealogy_research = Asset ("Genealogy Research", ["Task"], 1)
vatican_missionary = Asset ("Vatican Missionary", ["Ally"], 2)
camera = Asset ("Camera", ["Item"], 2)
fine_clothes = Asset ("Fine Clothes", ["Item"], 2)
puzzle_box = Asset ("Puzzle Box", ["Trinket"], 3)
doble_barreled_shotgun = Asset ("Double-barreled Shotgun", ["Item", "Weapon"], 4)
enchanted_dagger = Asset ("Enchanted Dagger", ["Item", "Weapon", "Magical Weapon"], 1)
lucky_ring = Asset ("Lucky Ring", ["Trinket"], 3)
pocket_watch = Asset ("Pocket Watch", ["Trinket"], 1)
consecration = Asset ("Consecration", ["Service"], 2)
medical_journal = Asset ("Medical Journal", ["Item", "Tome"], 2)
police_assistance = Asset ("Police Assistance", ["Service"], 1)
personal_assistant = Asset ("Personal Assistant", ["Ally"], 2)
enchanted_blade = Asset ("Enchanted Blade", ["Item", "Weapon", "Magical Weapon"], 3)
secret_page = Asset ("Secret Page", ["Item", "Tome"], 2)
security_squad = Asset ("Security Squad", ["Ally"], 2)
colt_revolver_45 = Asset (".45 Colt Revolver", ["Item", "Weapon"], 1)
handcuffs = Asset ("Handcuffs", ["Item"], 2)
specialized_training = Asset ("Specialized Training", ["Task"], 1)
treasured_memento = Asset ("Treasured Memento", ["Trinket"], 1)
arcane_blade = Asset ("Arcane Blade", ["Item", "Weapon", "Magical Weapon"], 3)
sanctuary = Asset ("Sanctuary", ["Service"], 2)
carbine_rifle = Asset ("Carbine Rifle", ["Item", "Weapon"], 3)
lucky_rabbits_foot = Asset ("Lucky Rabbit's Foot", ["Trinket"], 1)
experts_blade = Asset ("Expert's Blade", ["Item", "Weapon", "Magical Weapon", "Relic", "Magical Relic", "Magical Relic Weapon"], 2)
partolling_the_streets = Asset ("Patrolling the Streets", ["Task"], 1)
opus_arcana = Asset ("Opus Arcana", ["Item", "Tome"], 2)
syndicate_agent = Asset ("Syndicate Agent", ["Ally"], 2)
agency_quarantine = Asset ("Agency Quarantine", ["Service"], 4)
cat_burglar = Asset ("Cat Burglar", ["Ally"], 1)
alchemical_concotion = Asset ("Alchemical Concotion", ["Item", "Magical"], 1)
whiskey = Asset ("Whiskey", ["Item"], 1)
monster_hunter = Asset ("Monster Hunter", ["Ally"], 3)
magick_shoppe = Asset ("Magick Shoppe", ["Service"], 2)
courier_needed = Asset ("Courier Needed", ["Service"], 1)
enchanted_jewelry = Asset ("Enchanted Jewelry", ["Item", "Relic", "Magical", "Magical Relic"], 3)
esteemed_author = Asset ("Esteemed Author", ["Ally"], 3)
forbidden_secrets = Asset ("Forbidden Secrets", ["Item", "Tome"], 2)
gruesome_talisman = Asset ("Gruesome Talisman", ["Trinket"], 1)
assassination = Asset ("Assassination", ["Service"], 2)
grisly_totem = Asset ("Grisly Totem", ["Trinket", "Magical"], 3)
holy_spear = Asset ("Holy Spear", ["Item", "Weapon", "Magical Weapon", "Relic", "Magical Relic", "Magical Relic Weapon"], 3)
automatic_45 = Asset (".45 Automatic", ["Item", "Weapon"], 2)
willful_aristocrat = Asset ("Willful Aristocrat", ["Ally"], 4)
mauser_c96 = Asset ("Mauser C96", ["Item", "Weapon"], 2)
protective_totem = Asset ("Protective Totem", ["Item", "Relic", "Magical Relic"], 1)
night_classes = Asset ("Night Classes", ["Service"], 2)
psychoanalyst = Asset ("Pschoanalyst", ["Ally"], 2)
occult_tablet = Asset ("Occult Tablet", ["Item", "Relic", "Tome"], 3)
police_ledger = Asset ("Police Ledger", ["Item"], 1)
ancient_manuscript = Asset ("Ancient Manuscript", ["Trinket", "Relic", "Tome"], 3)
chainsaw = Asset ("Chainsaw", ["Item"], 3)
mysterious_tome = Asset ("Mysterious Tome", ["Item", "Tome"], 2)
arcane_assistant = Asset ("Arcane Assistant", ["Ally"], 1)
mystic_bounty_hunter = Asset ("Mystic Bounty Hunter", ["Ally"], 2)
private_care = Asset ("Private Care", ["Service"], 2)
silver_twilight_host = Asset ("Silver Twilight Host", ["Service"], 3)
enchanted_bow = Asset ("Enchanted Bow", ["Item", "Weapon", "Magical Weapon"], 3)
enchanted_cane = Asset ("Enchanted Cane", ["Item", "Weapon", "Magical Weapon"], 2)
mystic_scroll = Asset ("Mystic Scroll", ["Item", "Tome"], 1)
arcanist = Asset ("Arcanist", ["Ally"], 3)
colt_pocket_32 = Asset (".32 Colt Pocket", ["Item", "Weapon"], 2)
hitman = Asset ("Hitman", ["Ally"], 3)
profane_tome = Asset ("Profane Tome", ["Item", "Tome"], 1)
silver_twilight_ritual = Asset ("Silver Twilight Ritual", ["Service"], 3)
astonomy_guidebook = Asset ("Astronomy Guidebook", ["Item", "Tome"], 2)
private_flight = Asset ("Private Flight", ["Service"], 2)
gameblers_dice = Asset ("Gambler's Dice", ["Trinket"], 3)
ritual_candles = Asset ("Ritual Candles", ["Trinket"], 1)
bandages = Asset ("Bandages", ["Item"], 1)
lodge_researcher = Asset ("Lodge Researcher", ["Ally"], 3)
winchester_riffle = Asset ("Winchester Rifle", ["Item", "Weapon"], 2)
lavish_feast = Asset ("Lavish Feast", ["Service"], 1)
mystic_tome = Asset ("Mystic Tome", ["Item", "Tome"], 3)
dream_box = Asset ("Dream Box", ["Trinket", "Magical"], 2)
bull_whip = Asset ("Bull Whip", ["Item", "Weapon"], 1)
arcane_scroll = Asset ("Arcane Scroll", ["Trinket", "Tome"], 1)
mineralogy_research = Asset ("Mineralogy Research", ["Task"], 1)
arcane_tome = Asset ("Arcane Tome", ["Item", "Tome"], 3)
expedition_map = Asset ("Expedition Map", ["Trinket", "Tome"], 1)
forbidden_text = Asset ("Forbidden Text", ["Item", "Tome"], 2)
agency_stakeout = Asset ("Agency Stakeout", ["Service"], 3)
book_of_spells = Asset ("Book of Spells", ["Item", "Tome"], 3)
tome_of_horrors = Asset ("Tome of Horrors", ["Item", "Tome"], 3)
bodyguard = Asset ("Bodyguard", ["Ally"], 2)
holy_cross = Asset ("Holy Cross", ["Item"], 2)
spirit_dagger = Asset ("Spirit Dagger", ["Item", "Weapon", "Magical"], 2)

black_fan = Artifact("Black Fan", ["Item", "Magical"])
sword_of_yha_talla = Artifact ("Sword of Y'ha-Talla", ["Item", "Weapon", "Magical Weapon"])
fetch_stick = Artifact ("Fetch Stick", ["Item", "Weapon", "Magical Weapon"])
tattered_cloak = Artifact ("Tattered Cloak", ["Item", "Magical"])
hemisphere_map = Artifact ("Hemisphere Map", ["Item"])
bone_pipes = Artifact ("Bone Pipes", ["Item", "Magical"])
alien_device = Artifact ("Alien Device", ["Item"])
khopesh_of_the_abyss = Artifact ("Khopesh of the Abyss", ["Item", "Weapon", "Magical Weapon", "Relic", "Magical Relic", "Magical Relic Weapon"])
scales_of_thoth = Artifact ("Scales of Thoth", ["Item", "Relic", "Magical Relic"])
crystallizer_of_dreams = Artifact ("Crystallizer of Dreams", ["Item", "Magical Teamwork"])
pentacle_of_planes = Artifact ("Pentacle of Planes", ["Item", "Magical"])
twin_scepters = Artifact ("Twin Scepters", ["Item", "Relic", "Magical Relic"])
book_of_the_dead = Artifact ("Book of the Dead", ["Item", "Relic", "Tome"])
cursed_sphere = Artifact ("Cursed Sphere", ["Item", "Magical"])
de_vermis_mysteriis = Artifact ("De Vermis Mysteriis", ["Item", "Tome"])
massa_di_requiem_per_shuggay = Artifact ("Massa di Requiem per Shuggay", ["Item", "Tome"])
milk_of_shub_niggurath = Artifact ("Milk of Shub-Niggurath", ["Item", "Elixir"])
grotesque_statue = Artifact ("Grotesque Statue", ["Item"])
the_silver_key = Artifact ("The Silver Key", ["Item", "Magical"])
ttkha_halot = Artifact ("T'tka Halot", ["Item", "Tome"])
glass_of_mortlan = Artifact ("Glass of Mortlan", ["Item", "Magical"])
satchel_of_the_void = Artifact ("Satchel of the Void", ["Item", "Magical"])
tikkoun_elixer = Artifact ("Tikkoun Elixir", ["Item", "Elixir"])
elixir_of_life = Artifact ("Elixir of Life", ["Item", "Elixir"])
dragon_idol = Artifact ("Dragon Idol", ["Item", "Relic", "Magical Relic"])
true_magick = Artifact ("True Magick", ["Item", "Tome"])
pnakotic_manuscripts = Artifact ("Pnakotic Manuscripts", ["Item", "Tome"])
mask_of_sthenelus = Artifact ("Mask of Sthenelus", ["Item", "Relic", "Magical Relic"])
black_book = Artifact ("Black Book", ["Item", "Tome"])
zanthu_tablets = Artifact ("Zanthu Tablets", ["Item", "Tome"])
dhol_chants = Artifact ("Dhol Chants", ["Item", "Tome"])
key_to_carcosa = Artifact ("Key to Carcosa", ["Trinket", "Magical"])
sword_of_saint_jerome = Artifact ("Sword of Saint Jerome", ["Item", "Weapon", "Magical"])
hyperborean_crystal = Artifact ("Hyperborean Crystal", ["Item", "Magical"])
crux_of_cykranosh = Artifact ("Crux of Cykranosh", ["Item", "Magical"])
pallid_mask = Artifact ("Pallid Mask", ["Item", "Magical"])
king_in_yellow = Artifact ("King in Yellow", ["Item", "Tome"])
eltdown_shards = Artifact ("Eltdown Shards", ["Item", "Tome"])
charne_frangments = Artifact ("G'harne Fragments", ["Item", "Relic", "Tome", "Relic Tome"])
elder_key = Artifact ("Elder Key", ["Item", "Tome"])
lightning_gun = Artifact ("Lightning Gun", ["Item", "Weapon", "Magical"])
cultes_des_goules = Artifact ("Cultes des Goules", ["Item", "Tome"])
livre_divon = Artifact ("Livre d'Ivon", ["Item", "Tome"])
heart_of_winter = Artifact ("Heart of Winter", ["Item"])
mi_go_brain_case = Artifact("Mi-go Brain Case", ["Item", "Magical", "Teamwork"])
serpent_crown = Artifact ("Serpent Crown", ["Item", "Magical"])
shining_trapezohedron = Artifact ("Shining Trapezohedron", ["Item", "Magical"])
gate_box = Artifact ("Gate Box", ["Item", "Magical"])
flute_of_the_outer_gods = Artifact ("Flute of the Outer Gods", ["Item", "Magical"])
necronomicon = Artifact ("Necronomicon", ["Item", "Tome"])
ruby_of_rlyeh = Artifact ("Ruby of R'lyeh", ["Item", "Magical"])
crystal_of_the_elder_things = Artifact ("Crustal of the Elder Things", ["Item"])
mask_of_the_watcher = Artifact ("Mask of the Watcher", ["Item", "Magical"])
vach_viraj_chant = Artifact ("Vach-Viraj Chant", ["Item", "Tome", "Magical Tome"])

ace_of_swords = Unique ("Ace of Swords", ["Trinket", "Tarot"])
agency_secrets1 = Unique ("Agency Secrets", ["Item"])
agency_secrets2 = Unique ("Agency Secrets", ["Item"])
agency_secrets3 = Unique ("Agency Secrets", ["Item"])
agency_secrets4 = Unique ("Agency Secrets", ["Item"])
ancient_scroll = Unique ("Ancient Scroll", ["Item", "Relic", "Tome"])
ancient_sword1 = Unique ("Ancient Sword", ["Item", "Weapon", "Relic", "Magical Weapon", "Magical Relic", "Magical Relic Weapon"])
ancient_sword2 = Unique ("Ancient Sword", ["Item", "Weapon", "Relic", "Magical Weapon", "Magical Relic", "Magical Relic Weapon"])
canopic_jar1 = Unique ("Canopic Jar", ["Item", "Relic", "Magical Relic"])
canopic_jar2 = Unique ("Canopic Jar", ["Item", "Relic", "Magical Relic"])
canopic_jar3 = Unique ("Canopic Jar", ["Item", "Relic", "Magical Relic"])
cryptic_text1 = Unique ("Cryptic Text", ["Item", "Tome"])
cryptic_text2 = Unique ("Cryptic Text", ["Item", "Tome"])
cryptic_text3 = Unique ("Cryptic Text", ["Item", "Tome"])
cryptic_text4 = Unique ("Cryptic Text", ["Item", "Tome"])
cursed_tablet1 = Unique ("Cursed Tablet", ["Item", "Relic", "Magical Relic"])
cursed_tablet2 = Unique ("Cursed Tablet", ["Item", "Relic", "Magical Relic"])
death_xiii = Unique ("Death XIII", ["Trinket", "Tarot"])
eye_darkness = Unique ("Eye of Darkness", ["Item", "Magical"])
eye_light = Unique ("Eye of Light", ["Item", "Magical"])
five_of_penticles = Unique ("Five of Pentacles", ["Trinket", "Tarot"])
flux_stabilzer = Unique ("Flux Stabilizer", ["Item"])
fossilixed_samples1 = Unique ("Fossilized Samples", ["Item", "Relic"])
fossilixed_samples2 = Unique ("Fossilized Samples", ["Item", "Relic"])
fossilixed_samples3 = Unique ("Fossilized Samples", ["Item", "Relic"])
four_of_cups = Unique ("Four of Cups", ["Trinket", "Tarot"])
jeweled_scarab = Unique ("Jeweled Scarab", ["Trinket", "Relic", "Magical Relic"])
lost_treasure1 = Unique ("Lost Treasure", ["Item", "Relic", "Magical relic"])
lost_treasure2 = Unique ("Lost Treasure", ["Item", "Relic", "Magical relic"])
mysterious_idol1 = Unique ("Mysterious Idol", ["Item", "Relic", "Magical Relic"])
mysterious_idol2 = Unique ("Mysterious Idol", ["Item", "Relic", "Magical Relic"])
mysterious_idol3 = Unique ("Mysterious Idol", ["Item", "Relic", "Magical Relic"])
mysterious_idol4 = Unique ("Mysterious Idol", ["Item", "Relic", "Magical Relic"])
mysterious_idol5 = Unique ("Mysterious Idol", ["Item", "Relic", "Magical Relic"])
mysterious_idol6 = Unique ("Mysterious Idol", ["Item", "Relic", "Magical Relic"])
mythos_codex1 = Unique ("Mythos Codex", ["Item", "Tome"])
mythos_codex2 = Unique ("Mythos Codex", ["Item", "Tome"])
mythos_codex3 = Unique ("Mythos Codex", ["Item", "Tome"])
mythos_codex4 = Unique ("Mythos Codex", ["Item", "Tome"])
old_journal1 = Unique ("Old Journal", ["Item", "Tome"])
old_journal2 = Unique ("Old Journal", ["Item", "Tome"])
old_journal3 = Unique ("Old Journal", ["Item", "Tome"])
old_journal4 = Unique ("Old Journal", ["Item", "Tome"])
ornate_scarab = Unique ("Ornate Scarab", ["Trinket", "Relic", "Magical Relic"])
perplexing_idol = Unique ("Perplexing Idol", ["Item", "Relic", "Magical Relic"])
pharonic_mask = Unique ("Pharonic Mask", ["Item", "Relic", "Magical Relic"])
provisions1 = Unique ("Provisions", ["Item"])
provisions2 = Unique ("Provisions", ["Item"])
provisions3 = Unique ("Provisions", ["Item"])
provisions4 = Unique ("Provisions", ["Item"])
sacred_icon = Unique ("Sacred Icon", ["Trinket", "Relic", "Magical Relic"])
stone_calendar1 = Unique ("Stone Calander", ["Item", "Relic", "Magical", "Relic"])
stone_calendar2 = Unique ("Stone Calander", ["Item", "Relic", "Magical", "Relic"])
stone_chest1 = Unique ("Stone Chest", ["Item", "Relic"])
stone_chest2 = Unique ("Stone Chest", ["Item", "Relic"])
stone_chest3 = Unique ("Stone Chest", ["Item", "Relic"])
stone_tablet1 = Unique ("Stone Tablet", ["Item", "Relic"])
stone_tablet2 = Unique ("Stone Tablet", ["Item", "Relic"])
stone_tablet3 = Unique ("Stone Tablet", ["Item", "Relic"])
stone_tablet4 = Unique ("Stone Tablet", ["Item", "Relic"])
stone_tablet5 = Unique ("Stone Tablet", ["Item", "Relic"])
stone_tablet6 = Unique ("Stone Tablet", ["Item", "Relic"])
tablet_shards1 = Unique ("Tablet Shards", ["Item", "Relic"])
tablet_shards2 = Unique ("Tablet Shards", ["Item", "Relic"])
tablet_shards3 = Unique ("Tablet Shards", ["Item", "Relic"])
the_moon_xviii = Unique ("The Moon XVIII", ["Trinket", "Tarot"])
treasure_map1 = Unique ("Treasure Map", ["Trinket"])
treasure_map2 = Unique ("Treasure Map", ["Trinket"])
treasure_map3 = Unique ("Treasure Map", ["Trinket"])
treasure_map4 = Unique ("Treasure Map", ["Trinket"])
agent_callahan = Unique ("Agent Callahan", ["Ally", "Character"])
albert_wilmarth = Unique ("Albert Wilmarth", ["Ally", "Character"])
amery_wendy_smith = Unique ("Amery Wendy-Smith", ["Ally", "Character"])
anna_tilton = Unique ("Anna Tiltion", ["Ally", "Character"])
antartic_guide1 = Unique ("Antartic Guide", ["Ally"])
antartic_guide2 = Unique ("Antartic Guide", ["Ally"])
asenath_waite = Unique ("Asenath Waite", ["Ally", "Character"])
basil_elton = Unique ("Basil Elton", ["Ally", "Character"])
constance_hawberk = Unique ("Constance Hawberk", ["Ally", "Character"])
corinna_jones = Unique ("Corinna Jones", ["Ally", "Character"])
danforth = Unique ("Danforth", ["Ally", "Character"])
dog_sled1 = Unique ("Dog Sled", ["Ally"])
dog_sled2 = Unique ("Dog Sled", ["Ally"])
dr_ali_kafour = Unique ("Dr. Ali Kafour", ["Ally", "Character"])
dr_hiram_upham = Unique ("Dr. Hiram Upham", ["Ally", "Character"])
duke = Unique ("Duke", ["Ally"])
enoch_bowen = Unique ("Enoch Bowen", ["Ally", "Character"])
erich_weiss = Unique ("Erich Weiss", ["Ally", "Character"])
esteban_herrero = Unique ("Estban Herrero", ["Ally", "Character"])
etienne_laurent = Unique ("Etienne Laurent", ["Ally", "Character"])
father_merluzzo = Unique ("Father Merluzzo", ["Ally", "Character"])
granny_orne = Unique ("Granny Orne", ["Ally", "Character"])
halpin_chalmers = Unique ("Halpin Chalmers", ["Ally", "Character"])
henry_wilcox = Unique ("Henry Wilcox", ["Ally", "Character"])
hildred_castaigne = Unique ("Hildred Castaigne", ["Ally", "Character"])
jack_brady = Unique ("Jack Brady", ["Ally", "Character"])
jake_williams = Unique ("Jake Williams", ["Ally", "Character"])
kid_obrien = Unique ("Kid O'Brien", ["Ally", "Character"])
miss_doyle = Unique ("Miss Doyle", ["Ally"])
proffesor_armitage = Unique ("Professor Armitage", ["Ally", "Character"])
professor_morgan = Unique ("Professor Morgan", ["Ally", "Character"])
professor_rice = Unique ("Professor Rice", ["Ally", "Character"])
randolph_carter = Unique ("Randolph Carter", ["Ally", "Character"])
sir_william_brinton = Unique ("Sir William Brinton", ["Ally", "Character"])
the_messenger = Unique ("The Messenger", ["Ally", "Character"])
william_dyer = Unique ("William Dyer", ["Ally", "Character"])
wooden_puppet1 = Unique ("Wooden Puppet", ["Ally", "Relic", "Magical Relic"])
wooden_puppet2 = Unique ("Wooden Puppet", ["Ally", "Relic", "Magical Relic"])
bury_them_deep1 = Unique ("Bury Them Deep", ["Task"])
bury_them_deep2 = Unique ("Bury Them Deep", ["Task"])
bury_them_deep3 = Unique ("Bury Them Deep", ["Task"])
courier_run1 = Unique ("Courier Run", ["Task"])
courier_run2 = Unique ("Courier Run", ["Task"])
courier_run3 = Unique ("Courier Run", ["Task"])
courier_run4 = Unique ("Courier Run", ["Task"])
courier_run5 = Unique ("Courier Run", ["Task"])
courier_run6 = Unique ("Courier Run", ["Task"])
courier_run7 = Unique ("Courier Run", ["Task"])
courier_run8 = Unique ("Courier Run", ["Task"])
dimensional_study1 = Unique ("Dimensional Study", ["Task"])
dimensional_study2 = Unique ("Dimensional Study", ["Task"])
dimensional_study3 = Unique ("Dimensional Study", ["Task"])
enlist_the_masses1 = Unique ("Enlist the Masses", ["Task"])
enlist_the_masses2 = Unique ("Enlist the Masses", ["Task"])
enlist_the_masses3 = Unique ("Enlist the Masses", ["Task"])
exploring_the_ruins1 = Unique ("Exploring The Ruins", ["Task"])
exploring_the_ruins2 = Unique ("Exploring The Ruins", ["Task"])
exploring_the_ruins3 = Unique ("Exploring The Ruins", ["Task"])
for_the_greater_good1 = Unique ("For the Greater Good", ["Task"])
for_the_greater_good2 = Unique ("For the Greater Good", ["Task"])
for_the_greater_good3 = Unique ("For the Greater Good", ["Task"])
for_the_greater_good4 = Unique ("For the Greater Good", ["Task"])
for_the_greater_good5 = Unique ("For the Greater Good", ["Task"])
for_the_greater_good6 = Unique ("For the Greater Good", ["Task"])
funding_the_cause1 = Unique ("Funding the Casue", ["Task"])
funding_the_cause2 = Unique ("Funding the Casue", ["Task"])
funding_the_cause3 = Unique ("Funding the Casue", ["Task"])
invoke_the_elements1 = Unique ("Invoke the Elements", ["Task"])
invoke_the_elements2 = Unique ("Invoke the Elements", ["Task"])
invoke_the_elements3 = Unique ("Invoke the Elements", ["Task"])
know_thy_enemy1 = Unique ("Know Thy Enemy", ["Task"])
know_thy_enemy2 = Unique ("Know Thy Enemy", ["Task"])
know_thy_enemy3 = Unique ("Know Thy Enemy", ["Task"])
light_of_reason1 = Unique ("Light of Reason", ["Task"])
light_of_reason2 = Unique ("Light of Reason", ["Task"])
light_of_reason3 = Unique ("Light of Reason", ["Task"])
mastering_the_art1 = Unique ("Mastering the Art", ["Task"])
mastering_the_art2 = Unique ("Mastering the Art", ["Task"])
mastering_the_art3 = Unique ("Mastering the Art", ["Task"])
prayer1 = Unique ("Prayer", ["Task"])
prayer2 = Unique ("Prayer", ["Task"])
prayer3 = Unique ("Prayer", ["Task"])
purifying_the_world1 = Unique ("Purifying the World", ["Task"])
purifying_the_world2 = Unique ("Purifying the World", ["Task"])
purifying_the_world3 = Unique ("Purifying the World", ["Task"])
purifying_the_world4 = Unique ("Purifying the World", ["Task"])
purifying_the_world5 = Unique ("Purifying the World", ["Task"])
purifying_the_world6 = Unique ("Purifying the World", ["Task"])
push_it_to_the_limit1 = Unique ("Push it to the Limit", ["Task"])
push_it_to_the_limit2 = Unique ("Push it to the Limit", ["Task"])
push_it_to_the_limit3 = Unique ("Push it to the Limit", ["Task"])
sacrifices_to_make1 = Unique ("Sacrafices to Make", ["Task"])
sacrifices_to_make2 = Unique ("Sacrafices to Make", ["Task"])
sacrifices_to_make3 = Unique ("Sacrafices to Make", ["Task"])
sacrifices_to_make4 = Unique ("Sacrafices to Make", ["Task"])
sacrifices_to_make5 = Unique ("Sacrafices to Make", ["Task"])
sacrifices_to_make6 = Unique ("Sacrafices to Make", ["Task"])
sealing_the_old_ones1 = Unique ("Sealing the Old Ones", ["Task"])
sealing_the_old_ones2 = Unique ("Sealing the Old Ones", ["Task"])
sealing_the_old_ones3 = Unique ("Sealing the Old Ones", ["Task"])
sealing_the_old_ones4 = Unique ("Sealing the Old Ones", ["Task"])
sealing_the_old_ones5 = Unique ("Sealing the Old Ones", ["Task"])
sealing_the_old_ones6 = Unique ("Sealing the Old Ones", ["Task"])
seeking_the_masters1 = Unique ("Seeking the Masters", ["Task"])
seeking_the_masters2 = Unique ("Seeking the Masters", ["Task"])
seeking_the_masters3 = Unique ("Seeking the Masters", ["Task"])
tempted_by_darkness1 = Unique ("Tempted by Darkness", ["Task"])
tempted_by_darkness2 = Unique ("Tempted by Darkness", ["Task"])
tempted_by_darkness3 = Unique ("Tempted by Darkness", ["Task"])
turning_the_tide1 = Unique ("Turning the Tide", ["Task"])
turning_the_tide2 = Unique ("Turning the Tide", ["Task"])
turning_the_tide3 = Unique ("Turning the Tide", ["Task"])
unspeakable_research1 = Unique ("Unspeakable Research", ["Task"])
unspeakable_research2 = Unique ("Unspeakable Research", ["Task"])
unspeakable_research3 = Unique ("Unspeakable Research", ["Task"])
walking_the_ley_lines1 = Unique ("Walking the Ley Lines", ["Task"])
walking_the_ley_lines2 = Unique ("Walking the Ley Lines", ["Task"])
walking_the_ley_lines3 = Unique ("Walking the Ley Lines", ["Task"])
walking_the_ley_lines4 = Unique ("Walking the Ley Lines", ["Task"])
walking_the_ley_lines5 = Unique ("Walking the Ley Lines", ["Task"])
walking_the_ley_lines6 = Unique ("Walking the Ley Lines", ["Task"])
wave_of_destruction1 = Unique ("Wave of Destruction", ["Task"])
wave_of_destruction2 = Unique ("Wave of Destruction", ["Task"])
wave_of_destruction3 = Unique ("Wave of Destruction", ["Task"])

alter_fate1 = Spell ("Alter Fate", ["Glamour"])
alter_fate2 = Spell ("Alter Fate", ["Glamour"])
alter_fate3 = Spell ("Alter Fate", ["Glamour"])
alter_fate4 = Spell ("Alter Fate", ["Glamour"])
arcane_insight1 = Spell ("Arcane Insight", ["Ritual"])
arcane_insight2 = Spell ("Arcane Insight", ["Ritual"])
arcane_insight3 = Spell ("Arcane Insight", ["Ritual"])
arcane_insight4 = Spell ("Arcane Insight", ["Ritual"])
astral_travel1 = Spell ("Astral Travel", ["Glamour"])
astral_travel2 = Spell ("Astral Travel", ["Glamour"])
astral_travel3 = Spell ("Astral Travel", ["Glamour"])
astral_travel4 = Spell ("Astral Travel", ["Glamour"])
azure_flame1 = Spell ("Azure Flame", ["Glamour"])
azure_flame2 = Spell ("Azure Flame", ["Glamour"])
azure_flame3 = Spell ("Azure Flame", ["Glamour"])
azure_flame4 = Spell ("Azure Flame", ["Glamour"])
banishment1 = Spell ("Banisment", ["Ritual"])
banishment2 = Spell ("Banisment", ["Ritual"])
banishment3 = Spell ("Banisment", ["Ritual"])
banishment4 = Spell ("Banisment", ["Ritual"])
beast_within1 = Spell ("Beast Within", ["Glamour"])
beast_within2 = Spell ("Beast Within", ["Glamour"])
beast_within3 = Spell ("Beast Within", ["Glamour"])
beast_within4 = Spell ("Beast Within", ["Glamour"])
binding1 = Spell ("Binidng", ["Incantation"])
binding2 = Spell ("Binidng", ["Incantation"])
binding3 = Spell ("Binidng", ["Incantation"])
binding4 = Spell ("Binidng", ["Incantation"])
blessing_of_isis1 = Spell ("Blessing of Isis", ["Ritual"])
blessing_of_isis2 = Spell ("Blessing of Isis", ["Ritual"])
blessing_of_isis3 = Spell ("Blessing of Isis", ["Ritual"])
blessing_of_isis4 = Spell ("Blessing of Isis", ["Ritual"])
call_the_storm1 = Spell ("Call the Storm", ["Ritual"])
call_the_storm2 = Spell ("Call the Storm", ["Ritual"])
call_the_storm3 = Spell ("Call the Storm", ["Ritual"])
call_the_storm4 = Spell ("Call the Storm", ["Ritual"])
clairvoyance1 = Spell ("Clairvoyance", ["Incantation"])
clairvoyance2 = Spell ("Clairvoyance", ["Incantation"])
clairvoyance3 = Spell ("Clairvoyance", ["Incantation"])
clairvoyance4 = Spell ("Clairvoyance", ["Incantation"])
conjuration1 = Spell ("Conjuration", ["Ritual"])
conjuration2 = Spell ("Conjuration", ["Ritual"])
conjuration3 = Spell ("Conjuration", ["Ritual"])
conjuration4 = Spell ("Conjuration", ["Ritual"])
dread_curse1 = Spell ("Dread Curse", ["Incantation"])
dread_curse2 = Spell ("Dread Curse", ["Incantation"])
dread_curse3 = Spell ("Dread Curse", ["Incantation"])
dread_curse4 = Spell ("Dread Curse", ["Incantation"])
enchanting_grace1 = Spell ("Enchangting Grace", ["Glamour"])
enchanting_grace2 = Spell ("Enchangting Grace", ["Glamour"])
enchanting_grace3 = Spell ("Enchangting Grace", ["Glamour"])
enchanting_grace4 = Spell ("Enchangting Grace", ["Glamour"])
enchant_weapon1 = Spell ("Enchant Weapon", ["Glamour"])
enchant_weapon2 = Spell ("Enchant Weapon", ["Glamour"])
enchant_weapon3 = Spell ("Enchant Weapon", ["Glamour"])
enchant_weapon4 = Spell ("Enchant Weapon", ["Glamour"])
feed_the_mind1 = Spell ("Feed the Mind", ["Ritual"])
feed_the_mind2 = Spell ("Feed the Mind", ["Ritual"])
feed_the_mind3 = Spell ("Feed the Mind", ["Ritual"])
feed_the_mind4 = Spell ("Feed the Mind", ["Ritual"])
find_gate1 = Spell ("Find Gate", ["Glamour"])
find_gate2 = Spell ("Find Gate", ["Glamour"])
find_gate3 = Spell ("Find Gate", ["Glamour"])
find_gate4 = Spell ("Find Gate", ["Glamour"])
flesh_ward1 = Spell ("Flesh Ward", ["Incantation"])
flesh_ward2 = Spell ("Flesh Ward", ["Incantation"])
flesh_ward3 = Spell ("Flesh Ward", ["Incantation"])
flesh_ward4 = Spell ("Flesh Ward", ["Incantation"])
forced_learning1 = Spell ("Forced Learning", ["Glamour"])
forced_learning2 = Spell ("Forced Learning", ["Glamour"])
forced_learning3 = Spell ("Forced Learning", ["Glamour"])
forced_learning4 = Spell ("Forced Learning", ["Glamour"])
healing_words1 = Spell ("Healing Words", ["Incantation"])
healing_words2 = Spell ("Healing Words", ["Incantation"])
healing_words3 = Spell ("Healing Words", ["Incantation"])
healing_words4 = Spell ("Healing Words", ["Incantation"])
instill_bravery1 = Spell ("Instill Bravery", ["Incantation"])
instill_bravery2 = Spell ("Instill Bravery", ["Incantation"])
instill_bravery3 = Spell ("Instill Bravery", ["Incantation"])
instill_bravery4 = Spell ("Instill Bravery", ["Incantation"])
intervene1 = Spell ("Intervene", ["Incantation, Teamwork"])
intervene2 = Spell ("Intervene", ["Incantation, Teamwork"])
intervene3 = Spell ("Intervene", ["Incantation, Teamwork"])
intervene4 = Spell ("Intervene", ["Incantation, Teamwork"])
markings_of_isis1 = Spell ("MArkings of Isis", ["Glamour"])
markings_of_isis2 = Spell ("MArkings of Isis", ["Glamour"])
markings_of_isis3 = Spell ("MArkings of Isis", ["Glamour"])
markings_of_isis4 = Spell ("MArkings of Isis", ["Glamour"])
minds_eye1 = Spell ("Mind's Eye", ["Glamour"])
minds_eye2 = Spell ("Mind's Eye", ["Glamour"])
minds_eye3 = Spell ("Mind's Eye", ["Glamour"])
minds_eye4 = Spell ("Mind's Eye", ["Glamour"])
mists_of_releh1 = Spell ("Mists of Releh", ["Incantation"])
mists_of_releh2 = Spell ("Mists of Releh", ["Incantation"])
mists_of_releh3 = Spell ("Mists of Releh", ["Incantation"])
mists_of_releh4 = Spell ("Mists of Releh", ["Incantation"])
occult_exaltation1 = Spell ("Ocult Exaltation", ["Ritual"])
occult_exaltation2 = Spell ("Ocult Exaltation", ["Ritual"])
occult_exaltation3 = Spell ("Ocult Exaltation", ["Ritual"])
occult_exaltation4 = Spell ("Ocult Exaltation", ["Ritual"])
plumb_the_void1 = Spell ("Plumb the Void", ["Ritual"])
plumb_the_void2 = Spell ("Plumb the Void", ["Ritual"])
plumb_the_void3 = Spell ("Plumb the Void", ["Ritual"])
plumb_the_void4 = Spell ("Plumb the Void", ["Ritual"])
poison_mist1 = Spell ("Poison Mist", ["Ritual"])
poison_mist2 = Spell ("Poison Mist", ["Ritual"])
poison_mist3 = Spell ("Poison Mist", ["Ritual"])
poison_mist4 = Spell ("Poison Mist", ["Ritual"])
shriveling1 = Spell ("Shriveling", ["Ritual"])
shriveling2 = Spell ("Shriveling", ["Ritual"])
shriveling3 = Spell ("Shriveling", ["Ritual"])
shriveling4 = Spell ("Shriveling", ["Ritual"])
shroud_of_shadow1 = Spell ("Shroud of Shadow", ["Glamour"])
shroud_of_shadow2 = Spell ("Shroud of Shadow", ["Glamour"])
shroud_of_shadow3 = Spell ("Shroud of Shadow", ["Glamour"])
shroud_of_shadow4 = Spell ("Shroud of Shadow", ["Glamour"])
spectral_razor1 = Spell ("Spectral Razor", ["Incantation"])
spectral_razor2 = Spell ("Spectral Razor", ["Incantation"])
spectral_razor3 = Spell ("Spectral Razor", ["Incantation"])
spectral_razor4 = Spell ("Spectral Razor", ["Incantation"])
storm_of_spirits1 = Spell ("Storm of Spirits", ["Incantation"])
storm_of_spirits2 = Spell ("Storm of Spirits", ["Incantation"])
storm_of_spirits3 = Spell ("Storm of Spirits", ["Incantation"])
storm_of_spirits4 = Spell ("Storm of Spirits", ["Incantation"])
summon_byakhee1 = Spell ("Summon Byakhee", ["Ritual"])
summon_byakhee2 = Spell ("Summon Byakhee", ["Ritual"])
summon_byakhee3 = Spell ("Summon Byakhee", ["Ritual"])
summon_byakhee4 = Spell ("Summon Byakhee", ["Ritual"])
summoning1 = Spell ("Summoning", ["Ritual"])
summoning2 = Spell ("Summoning", ["Ritual"])
summoning3 = Spell ("Summoning", ["Ritual"])
summoning4 = Spell ("Summoning", ["Ritual"])
voice_of_ra1 = Spell ("Voice of Ra", ["Glamour"])
voice_of_ra2 = Spell ("Voice of Ra", ["Glamour"])
voice_of_ra3 = Spell ("Voice of Ra", ["Glamour"])
voice_of_ra4 = Spell ("Voice of Ra", ["Glamour"])
wither1 = Spell ("Wither", ["Incantation"])
wither2 = Spell ("Wither", ["Incantation"])
wither3 = Spell ("Wither", ["Incantation"])
wither4 = Spell ("Wither", ["Incantation"])
wrack1 = Spell ("Wrack", ["Incantation"])
wrack2 = Spell ("Wrack", ["Incantation"])
wrack3 = Spell ("Wrack", ["Incantation"])
wrack4 = Spell ("Wrack", ["Incantation"])

blight1 = Condition ("Blight", ["Bane"])
blight2 = Condition ("Blight", ["Bane"])
blight3 = Condition ("Blight", ["Bane"])
blight4 = Condition ("Blight", ["Bane"])
corruption1 = Condition ("Corruption", ["Bane"])
corruption2 = Condition ("Corruption", ["Bane"])
corruption3 = Condition ("Corruption", ["Bane"])
corruption4 = Condition ("Corruption", ["Bane"])
corruption5 = Condition ("Corruption", ["Bane"])
corruption6 = Condition ("Corruption", ["Bane"])
corruption7 = Condition ("Corruption", ["Bane"])
corruption8 = Condition ("Corruption", ["Bane"])
cursed1 = Condition ("Cursed", ["Bane"])
cursed2 = Condition ("Cursed", ["Bane"])
cursed3 = Condition ("Cursed", ["Bane"])
cursed4 = Condition ("Cursed", ["Bane"])
cursed5 = Condition ("Cursed", ["Bane"])
cursed6 = Condition ("Cursed", ["Bane"])
cursed7 = Condition ("Cursed", ["Bane"])
cursed8 = Condition ("Cursed", ["Bane"])
cursed9 = Condition ("Cursed", ["Bane"])
cursed10 = Condition ("Cursed", ["Bane"])
cursed11 = Condition ("Cursed", ["Bane"])
haunted1 = Condition ("Haunted", ["Bane"])
haunted2 = Condition ("Haunted", ["Bane"])
haunted3 = Condition ("Haunted", ["Bane"])
haunted4 = Condition ("Haunted", ["Bane"])
attuned1 = Condition ("Attuned", ["Talent"])
attuned2 = Condition ("Attuned", ["Talent"])
blessed1 = Condition ("Blessed", ["Boon"])
blessed2 = Condition ("Blessed", ["Boon"])
blessed3 = Condition ("Blessed", ["Boon"])
blessed4 = Condition ("Blessed", ["Boon"])
blessed5 = Condition ("Blessed", ["Boon"])
blessed6 = Condition ("Blessed", ["Boon"])
blessed7 = Condition ("Blessed", ["Boon"])
blessed8 = Condition ("Blessed", ["Boon"])
blessed9 = Condition ("Blessed", ["Boon"])
blessed10 = Condition ("Blessed", ["Boon"])
blessed11 = Condition ("Blessed", ["Boon"])
composed1 = Condition ("Composed", ["Talent", "Boon"])
composed2 = Condition ("Composed", ["Talent", "Boon"])
elusive1 = Condition ("Elusive", ["Talent"])
elusive2 = Condition ("Elusive", ["Talent"])
elusive3 = Condition ("Elusive", ["Talent"])
elusive4 = Condition ("Elusive", ["Talent"])
guts1 = Condition ("Guts", ["Talent"])
guts2 = Condition ("Guts", ["Talent"])
headtstrong1 = Condition ("Headstrong", ["Talent"])
headtstrong2 = Condition ("Headstrong", ["Talent"])
headtstrong3 = Condition ("Headstrong", ["Talent"])
headtstrong4 = Condition ("Headstrong", ["Talent"])
living_link1 = Condition ("Living Link", ["Boon"])
living_link2 = Condition ("Living Link", ["Boon"])
living_link3 = Condition ("Living Link", ["Boon"])
living_link4 = Condition ("Living Link", ["Boon"])
martial_prowess1 = Condition ("Marial Prowess", ["Talent"])
martial_prowess2 = Condition ("Marial Prowess", ["Talent"])
martial_prowess3 = Condition ("Marial Prowess", ["Talent"])
martial_prowess4 = Condition ("Marial Prowess", ["Talent"])
meditation1 = Condition ("Meditation", ["Talent"])
meditation2 = Condition ("Meditation", ["Talent"])
moxie1 = Condition ("Moxie", ["Talent"])
moxie2 = Condition ("Moxie", ["Talent"])
perceptive1 = Condition ("Perceptive", ["Talent"])
perceptive2 = Condition ("Perceptive", ["Talent"])
practiced1 = Condition ("Practived", ["Talent"])
practiced2 = Condition ("Practived", ["Talent"])
practiced3 = Condition ("Practived", ["Talent"])
practiced4 = Condition ("Practived", ["Talent"])
quick_study1 = Condition ("Quick Study", ["Talent"])
quick_study2 = Condition ("Quick Study", ["Talent"])
quick_study3 = Condition ("Quick Study", ["Talent"])
quick_study4 = Condition ("Quick Study", ["Talent"])
relentless1 = Condition ("Relentless", ["Talent"])
relentless2 = Condition ("Relentless", ["Talent"])
resilient1 = Condition ("Resilient", ["Talent"])
resilient2 = Condition ("Resilient", ["Talent"])
resilient3 = Condition ("Resilient", ["Talent"])
resilient4 = Condition ("Resilient", ["Talent"])
righteous1 = Condition ("Righteous", ["Boon"])
righteous2 = Condition ("Righteous", ["Boon"])
righteous3 = Condition ("Righteous", ["Boon"])
righteous4 = Condition ("Righteous", ["Boon"])
rugged1 = Condition ("Rugged", ["Talent"])
rugged2 = Condition ("Rugged", ["Talent"])
silver_tongued1 = Condition ("Silver Tongued", ["Talent"])
silver_tongued2 = Condition ("Silver Tongued", ["Talent"])
skulduggery1 = Condition ("Skylduggery", ["Talent"])
skulduggery2 = Condition ("Skylduggery", ["Talent"])
studious1 = Condition ("Studious", ["Talent"])
studious2 = Condition ("Studious", ["Talent"])
visions1 = Condition ("Visions", ["Talent"])
visions2 = Condition ("Visions", ["Talent"])
debt1 = Condition ("Debt", ["Deal", "Common"])
debt2 = Condition ("Debt", ["Deal", "Common"])
debt3 = Condition ("Debt", ["Deal", "Common"])
debt4 = Condition ("Debt", ["Deal", "Common"])
debt5 = Condition ("Debt", ["Deal", "Common"])
debt6 = Condition ("Debt", ["Deal", "Common"])
debt7 = Condition ("Debt", ["Deal", "Common"])
debt8 = Condition ("Debt", ["Deal", "Common"])
debt9 = Condition ("Debt", ["Deal", "Common"])
debt10 = Condition ("Debt", ["Deal", "Common"])
debt11 = Condition ("Debt", ["Deal", "Common"])
debt12 = Condition ("Debt", ["Deal", "Common"])
debt13 = Condition ("Debt", ["Deal", "Common"])
debt14 = Condition ("Debt", ["Deal", "Common"])
dark_pact1 = Condition ("Dark Pact", ["Deal"])
dark_pact2 = Condition ("Dark Pact", ["Deal"])
dark_pact3 = Condition ("Dark Pact", ["Deal"])
dark_pact4 = Condition ("Dark Pact", ["Deal"])
dark_pact5 = Condition ("Dark Pact", ["Deal"])
dark_pact6 = Condition ("Dark Pact", ["Deal"])
dark_pact7 = Condition ("Dark Pact", ["Deal"])
dark_pact8 = Condition ("Dark Pact", ["Deal"])
dark_pact9 = Condition ("Dark Pact", ["Deal"])
promise_of_power1 = Condition ("Promise of Power", ["Deal"])
promise_of_power2 = Condition ("Promise of Power", ["Deal"])
promise_of_power3 = Condition ("Promise of Power", ["Deal"])
promise_of_power4 = Condition ("Promise of Power", ["Deal"])
funding1 = Condition ("Funding", ["Deal"])
funding2 = Condition ("Funding", ["Deal"])
funding3 = Condition ("Funding", ["Deal"])
funding4 = Condition ("Funding", ["Deal"])
agreement1 = Condition ("Agreement", ["Deal"])
agreement2 = Condition ("Agreement", ["Deal"])
agreement3 = Condition ("Agreement", ["Deal"])
agreement4 = Condition ("Agreement", ["Deal"])
hypothermia1 = Condition ("Hyperthermia", ["Exposure"])
hypothermia2 = Condition ("Hyperthermia", ["Exposure"])
hypothermia3 = Condition ("Hyperthermia", ["Exposure"])
hypothermia4 = Condition ("Hyperthermia", ["Exposure"])
hypothermia5 = Condition ("Hyperthermia", ["Exposure"])
hypothermia6 = Condition ("Hyperthermia", ["Exposure"])
hypothermia7 = Condition ("Hyperthermia", ["Exposure"])
hypothermia8 = Condition ("Hyperthermia", ["Exposure"])
diseased1 = Condition ("Diseased", ["Illness"])
diseased2 = Condition ("Diseased", ["Illness"])
diseased3 = Condition ("Diseased", ["Illness"])
diseased4 = Condition ("Diseased", ["Illness"])
infection1 = Condition ("Infection", ["Illness"])
infection2 = Condition ("Infection", ["Illness"])
infection3 = Condition ("Infection", ["Illness"])
infection4 = Condition ("Infection", ["Illness"])
poisoned1 = Condition ("Poisoned", ["Illness"])
poisoned2 = Condition ("Poisoned", ["Illness"])
poisoned3 = Condition ("Poisoned", ["Illness"])
poisoned4 = Condition ("Poisoned", ["Illness"])
leg_injury1 = Condition ("Leg Injury", ["Injury"])
leg_injury2 = Condition ("Leg Injury", ["Injury"])
leg_injury3 = Condition ("Leg Injury", ["Injury"])
leg_injury4 = Condition ("Leg Injury", ["Injury"])
head_injury1 = Condition ("Head Injury", ["Injury"])
head_injury2 = Condition ("Head Injury", ["Injury"])
head_injury3 = Condition ("Head Injury", ["Injury"])
head_injury4 = Condition ("Head Injury", ["Injury"])
internal_injury1 = Condition ("Internal Injury", ["Injury"])
internal_injury2 = Condition ("Internal Injury", ["Injury"])
internal_injury3 = Condition ("Internal Injury", ["Injury"])
internal_injury4 = Condition ("Internal Injury", ["Injury"])
internal_injury5 = Condition ("Internal Injury", ["Injury"])
back_injury1 = Condition ("Back Injury", ["Injury"])
back_injury2 = Condition ("Back Injury", ["Injury"])
back_injury3 = Condition ("Back Injury", ["Injury"])
back_injury4 = Condition ("Back Injury", ["Injury"])
back_injury5 = Condition ("Back Injury", ["Injury"])
amnesia1 = Condition ("Amnesia", ["Madness"])
amnesia2 = Condition ("Amnesia", ["Madness"])
amnesia3 = Condition ("Amnesia", ["Madness"])
amnesia4 = Condition ("Amnesia", ["Madness"])
amnesia5 = Condition ("Amnesia", ["Madness"])
amnesia6 = Condition ("Amnesia", ["Madness"])
hallucinations1 = Condition ("Hallucinations", ["Madness"])
hallucinations2 = Condition ("Hallucinations", ["Madness"])
hallucinations3 = Condition ("Hallucinations", ["Madness"])
hallucinations4 = Condition ("Hallucinations", ["Madness"])
hallucinations5 = Condition ("Hallucinations", ["Madness"])
hunger1 = Condition ("Hunger", ["Madness"])
hunger2 = Condition ("Hunger", ["Madness"])
hunger3 = Condition ("Hunger", ["Madness"])
hunger4 = Condition ("Hunger", ["Madness"])
paranoia1 = Condition ("Paranoia", ["Madness"])
paranoia2 = Condition ("Paranoia", ["Madness"])
paranoia3 = Condition ("Paranoia", ["Madness"])
paranoia4 = Condition ("Paranoia", ["Madness"])
terror1 = Condition ("Terror", ["Madness"])
terror2 = Condition ("Terror", ["Madness"])
terror3 = Condition ("Terror", ["Madness"])
terror4 = Condition ("Terror", ["Madness"])
despair1 = Condition ("Despair", ["Madness"])
despair2 = Condition ("Despair", ["Madness"])
despair3 = Condition ("Despair", ["Madness"])
despair4 = Condition ("Despair", ["Madness"])
hunted1 = Condition ("Hunted", ["Pursuit"])
hunted2 = Condition ("Hunted", ["Pursuit"])
hunted3 = Condition ("Hunted", ["Pursuit"])
hunted4 = Condition ("Hunted", ["Pursuit"])
wanted1 = Condition ("Wanted", ["Pursuit"])
wanted2 = Condition ("Wanted", ["Pursuit"])
wanted3 = Condition ("Wanted", ["Pursuit"])
wanted4 = Condition ("Wanted", ["Pursuit"])
lost_in_time_and_space1 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space2 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space3 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space4 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space5 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space6 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space7 = Condition ("Lost in Time and Space", ["Restriction"])
lost_in_time_and_space8 = Condition ("Lost in Time and Space", ["Restriction"])
detained1 = Condition ("Detained", ["Restriction"])
detained2 = Condition ("Detained", ["Restriction"])
detained3 = Condition ("Detained", ["Restriction"])
detained4 = Condition ("Detained", ["Restriction"])
detained5 = Condition ("Detained", ["Restriction"])

all_assets = [delivery_service, automatic_25, scribes_journal, search_the_archives, otherworld_codex, hired_muscle, ritual_dagger, specialist, kerosene, lodge_hunter, occult_text, occult_grimoire, lodge_physician, ankh, timeworn_brand, lucky_cigarette_case, king_james_bible, police_raid, agent_of_secrets, wireless_report, fresh_fruit, sledgehammer, lucky_talisman, museum_director, curiosity_shoppe, fine_jewelry, rumor_mill, holy_water, magnifying_glass, grim_lexicon, lodge_disciple, tommy_gun, axe, derringer_18, expedition_guide, chief_inspector, painkillers, revolver_38, ward_evil, lantern, newspaper_report, news_report, tome_of_secrets, occult_scripture, cultists_journal, charter_flight, arcane_scholar, training_regimen, map_of_the_lay_lines, astute_researcher, appeal_to_the_council, flamethrower, arcane_sutra, seek_the_truth, protective_amulet, private_investigator, elder_sign, museum_curator, conspiracy_theorist, mission_briefing, ancient_tome, research_student, treasure_hunter, divination, gatling_gun, witch_doctor, skeleton_keys, tear_gas, fishing_net, intelligence_report, grotesque_compendium, investment, vampiric_talisman, arcane_manuscripts, urban_guide, three_card_monty, dynamite, dream_diary, blessed_blade, scroll_of_secrets, blunderbuss, genealogy_research, vatican_missionary, camera, fine_clothes, puzzle_box, doble_barreled_shotgun, enchanted_dagger, lucky_ring, pocket_watch, consecration, medical_journal, police_assistance, personal_assistant, enchanted_blade, secret_page, security_squad, colt_revolver_45, handcuffs, specialized_training, treasured_memento, arcane_blade, sanctuary, carbine_rifle, lucky_rabbits_foot, experts_blade, partolling_the_streets, opus_arcana, syndicate_agent, agency_quarantine, cat_burglar, alchemical_concotion, whiskey, monster_hunter, magick_shoppe, courier_needed, enchanted_jewelry, esteemed_author, forbidden_secrets, gruesome_talisman, assassination, grisly_totem, holy_spear, automatic_45, willful_aristocrat, mauser_c96, protective_totem, night_classes, psychoanalyst, occult_tablet, police_ledger, ancient_manuscript, chainsaw, mysterious_tome, arcane_assistant, mystic_bounty_hunter, private_care, silver_twilight_host, enchanted_bow, enchanted_cane, mystic_scroll, arcanist, colt_pocket_32, hitman, profane_tome, silver_twilight_ritual, astonomy_guidebook, private_flight, gameblers_dice, ritual_candles, bandages, lodge_researcher, winchester_riffle, lavish_feast, mystic_tome, dream_box, bull_whip, arcane_scroll, mineralogy_research, arcane_tome, expedition_map, forbidden_text, agency_stakeout, book_of_spells, tome_of_horrors, bodyguard, holy_cross, spirit_dagger]

all_artifacts = [black_fan, sword_of_yha_talla, fetch_stick, tattered_cloak, hemisphere_map, bone_pipes, alien_device, khopesh_of_the_abyss, scales_of_thoth, crystallizer_of_dreams, pentacle_of_planes, twin_scepters,  book_of_the_dead, cursed_sphere, de_vermis_mysteriis, massa_di_requiem_per_shuggay, milk_of_shub_niggurath, grotesque_statue, the_silver_key, ttkha_halot, glass_of_mortlan, satchel_of_the_void, tikkoun_elixer, elixir_of_life, dragon_idol, true_magick, pnakotic_manuscripts, mask_of_sthenelus, black_book, zanthu_tablets, dhol_chants, key_to_carcosa, sword_of_saint_jerome, hyperborean_crystal, crux_of_cykranosh, pallid_mask, king_in_yellow, eltdown_shards, charne_frangments, elder_key, lightning_gun, cultes_des_goules, livre_divon, heart_of_winter, mi_go_brain_case, serpent_crown, shining_trapezohedron, gate_box, flute_of_the_outer_gods, necronomicon, ruby_of_rlyeh, crystal_of_the_elder_things, mask_of_the_watcher, vach_viraj_chant]

all_unique = [ace_of_swords, agency_secrets1, agency_secrets2, agency_secrets3, agency_secrets4, ancient_scroll, ancient_sword1, ancient_sword2, canopic_jar1, canopic_jar2, canopic_jar3, cryptic_text1, cryptic_text2, cryptic_text3, cryptic_text4, cursed_tablet1, cursed_tablet2, death_xiii, eye_darkness, eye_light, five_of_penticles, flux_stabilzer, fossilixed_samples1, fossilixed_samples2, fossilixed_samples3, four_of_cups, jeweled_scarab, lost_treasure1, lost_treasure2, mysterious_idol1, mysterious_idol2, mysterious_idol3, mysterious_idol4, mysterious_idol5, mysterious_idol6, mythos_codex1, mythos_codex2, mythos_codex3, mythos_codex4, old_journal1, old_journal2, old_journal3, old_journal4, ornate_scarab, perplexing_idol, pharonic_mask, provisions1, provisions2, provisions3, provisions4, sacred_icon, stone_calendar1, stone_calendar2, stone_chest1, stone_chest2, stone_chest3, stone_tablet1, stone_tablet2, stone_tablet3, stone_tablet4, stone_tablet5, stone_tablet6, tablet_shards1, tablet_shards2, tablet_shards3, the_moon_xviii, treasure_map1, treasure_map2, treasure_map3, treasure_map4, agent_callahan, albert_wilmarth, amery_wendy_smith, anna_tilton, antartic_guide1, antartic_guide2, asenath_waite, basil_elton, constance_hawberk, corinna_jones, danforth, dog_sled1, dog_sled2, dr_ali_kafour, dr_hiram_upham, duke, enoch_bowen, erich_weiss, esteban_herrero, etienne_laurent, father_merluzzo, granny_orne, halpin_chalmers, henry_wilcox, hildred_castaigne, jack_brady, jake_williams, kid_obrien, miss_doyle, proffesor_armitage, professor_morgan, professor_rice, randolph_carter, sir_william_brinton, the_messenger, william_dyer, wooden_puppet1, wooden_puppet2, bury_them_deep1, bury_them_deep2, bury_them_deep3, courier_run1, courier_run2, courier_run3, courier_run4, courier_run5, courier_run6, courier_run7, courier_run8, dimensional_study1, dimensional_study2, dimensional_study3, enlist_the_masses1, enlist_the_masses2, enlist_the_masses3, exploring_the_ruins1, exploring_the_ruins2, exploring_the_ruins3, for_the_greater_good1, for_the_greater_good2, for_the_greater_good3, for_the_greater_good4, for_the_greater_good5, for_the_greater_good6, funding_the_cause1, funding_the_cause2, funding_the_cause3, invoke_the_elements1, invoke_the_elements2, invoke_the_elements3, know_thy_enemy1, know_thy_enemy2, know_thy_enemy3, light_of_reason1, light_of_reason2, light_of_reason3, mastering_the_art1, mastering_the_art2, mastering_the_art3, prayer1, prayer2, prayer3, purifying_the_world1, purifying_the_world2, purifying_the_world3, purifying_the_world4, purifying_the_world5, purifying_the_world6, push_it_to_the_limit1, push_it_to_the_limit2, push_it_to_the_limit3, sacrifices_to_make1, sacrifices_to_make2, sacrifices_to_make3, sacrifices_to_make4, sacrifices_to_make5, sacrifices_to_make6, sealing_the_old_ones1, sealing_the_old_ones2, sealing_the_old_ones3, sealing_the_old_ones4, sealing_the_old_ones5, sealing_the_old_ones6, seeking_the_masters1, seeking_the_masters2, seeking_the_masters3, tempted_by_darkness1, tempted_by_darkness2, tempted_by_darkness3, turning_the_tide1, turning_the_tide2, turning_the_tide3, unspeakable_research1, unspeakable_research2, unspeakable_research3, walking_the_ley_lines1, walking_the_ley_lines2, walking_the_ley_lines3, walking_the_ley_lines4, walking_the_ley_lines5, walking_the_ley_lines6, wave_of_destruction1, wave_of_destruction2, wave_of_destruction3]

all_spells = [alter_fate1, alter_fate2, alter_fate3, alter_fate4, arcane_insight1, arcane_insight2, arcane_insight3, arcane_insight4, astral_travel1, astral_travel2, astral_travel3, astral_travel4, azure_flame1, azure_flame2, azure_flame3, azure_flame4, banishment1, banishment2, banishment3, banishment4, beast_within1, beast_within2, beast_within3, beast_within4, binding1, binding2, binding3, binding4, blessing_of_isis1, blessing_of_isis2, blessing_of_isis3, blessing_of_isis4, call_the_storm1, call_the_storm2, call_the_storm3, call_the_storm4, clairvoyance2, clairvoyance3, clairvoyance4, conjuration1, conjuration2, conjuration3, conjuration4, dread_curse1, dread_curse2, dread_curse3, dread_curse4, enchanting_grace1, enchanting_grace2, enchanting_grace3, enchanting_grace4, enchant_weapon1, enchant_weapon3, enchant_weapon4, feed_the_mind1, feed_the_mind2, feed_the_mind3, feed_the_mind4, find_gate1, find_gate2, find_gate3, find_gate4, flesh_ward1, flesh_ward2, flesh_ward3, flesh_ward4, forced_learning1, forced_learning2, forced_learning3, forced_learning4, healing_words1, healing_words2, healing_words3, healing_words4, instill_bravery1, instill_bravery2, instill_bravery3, instill_bravery4, intervene1, intervene2, intervene3, intervene4, markings_of_isis1, markings_of_isis2, markings_of_isis3, markings_of_isis4, minds_eye1, minds_eye2, minds_eye3, minds_eye4, mists_of_releh1, mists_of_releh2, mists_of_releh3, mists_of_releh4, occult_exaltation1, occult_exaltation2, occult_exaltation3, occult_exaltation4, plumb_the_void1, plumb_the_void2, plumb_the_void3, plumb_the_void4, poison_mist1, poison_mist2, poison_mist3, poison_mist4, shriveling1, shriveling2, shriveling3, shriveling4, shroud_of_shadow1, shroud_of_shadow2, shroud_of_shadow3, shroud_of_shadow4, spectral_razor1, spectral_razor2, spectral_razor3, spectral_razor4, storm_of_spirits1, storm_of_spirits2, storm_of_spirits3, storm_of_spirits4, summon_byakhee1, summon_byakhee2, summon_byakhee3, summon_byakhee4, summoning1, summoning2, summoning3, summoning4, voice_of_ra1, voice_of_ra2, voice_of_ra3, voice_of_ra4, wither1, wither2, wither3, wither4, wrack1, wrack2, wrack3, wrack4]

all_conditions = [blight1, blight2, blight3, blight4, corruption1, corruption2, corruption3, corruption4, corruption5, corruption6, corruption7, corruption8, cursed1, cursed2, cursed3, cursed4, cursed5, cursed6, cursed7, cursed8, cursed9, cursed10, cursed11, haunted1, haunted2, haunted3, haunted4, attuned1, attuned2, blessed1, blessed2, blessed3, blessed4, blessed5, blessed6, blessed7, blessed8, blessed9, blessed10, blessed11, composed1, composed2, elusive1, elusive2, elusive3, elusive4, guts1, guts2, headtstrong1, headtstrong2, headtstrong3, headtstrong4, living_link1, living_link2, living_link3, living_link4, martial_prowess1, martial_prowess2, martial_prowess3, martial_prowess4, meditation1, meditation2, moxie1, moxie2, perceptive1, perceptive2, practiced1, practiced2, practiced3, practiced4, quick_study1, quick_study2, quick_study3, quick_study4, relentless1, relentless2, resilient1, resilient2, resilient3, resilient4, righteous1, righteous2, righteous3, righteous4, rugged1, rugged2, silver_tongued1, silver_tongued2, skulduggery1, skulduggery2, studious1, studious2, visions1, visions2, debt1, debt2, debt3, debt4, debt5, debt6, debt7, debt8, debt9, debt10, debt11, debt12, debt13, debt14, dark_pact1, dark_pact2, dark_pact3, dark_pact4, dark_pact5, dark_pact6, dark_pact7, dark_pact8, dark_pact9, promise_of_power1, promise_of_power2, promise_of_power3, promise_of_power4, funding1, funding2, funding3, funding4, agreement1, agreement2, agreement3, agreement4, hypothermia1, hypothermia2, hypothermia3, hypothermia4, hypothermia5, hypothermia6, hypothermia7, hypothermia8, diseased1, diseased2, diseased3, diseased4, infection1, infection2, infection3, infection4, poisoned1, poisoned2, poisoned3, poisoned4, leg_injury1, leg_injury2, leg_injury3, leg_injury4, head_injury1, head_injury2, head_injury3, head_injury4, internal_injury1, internal_injury2, internal_injury3, internal_injury4, internal_injury5, back_injury1, back_injury2, back_injury3, back_injury4, back_injury5, amnesia1, amnesia2, amnesia3, amnesia4, amnesia5, amnesia6, hallucinations1, hallucinations2, hallucinations3, hallucinations4, hallucinations5, hunger1, hunger2, hunger3, hunger4, paranoia1, paranoia2, paranoia3, paranoia4, terror1, terror2, terror3, terror4, despair1, despair2, despair3, despair4, hunted1, hunted2, hunted3, hunted4, wanted1, wanted2, wanted3, wanted4, lost_in_time_and_space1, lost_in_time_and_space2, lost_in_time_and_space3, lost_in_time_and_space4, lost_in_time_and_space5, lost_in_time_and_space6, lost_in_time_and_space7, lost_in_time_and_space8, detained1, detained2, detained3, detained4, detained5]

while True:

    main_card_type = input ("Type of card: ")
    if main_card_type == "asset" or main_card_type == "Asset":
        random_asset = random.choice (all_assets)
        print (random_asset.name)
        all_assets.remove (random_asset)
    elif main_card_type == "asset weapon" or main_card_type == "Asset Weapon" or main_card_type == "weapon asset" or main_card_type == "Weapon Asset":
        random_weapon = random.choice ([(x) for x in all_assets if "Weapon" in (x).tags])
        print (random_weapon.name)
        all_assets.remove (random_weapon)
    elif main_card_type == "asset tome" or main_card_type == "Asset Tome" or main_card_type == "tome asset" or main_card_type == "Tome Asset":
        random_tome = random.choice ([(x) for x in all_assets if "Tome" in (x).tags])
        print (random_tome.name)
        all_assets.remove (random_tome)
    elif main_card_type == "asset item" or main_card_type == "Asset Item" or main_card_type == "item asset" or main_card_type == "Item Asset":
        random_item = random.choice ([(x) for x in all_assets if "Item" in (x).tags])
        print (random_item.name)
        all_assets.remove (random_item)
    elif main_card_type == "asset trinket" or main_card_type == "Asset Trinket" or main_card_type == "trinket asset" or main_card_type == "Trinket Asset":
        random_trinket = random.choice ([(x) for x in all_assets if "Trinket" in (x).tags])
        print (random_trinket.name)
        all_assets.remove (random_trinket)
    elif main_card_type == "asset task" or main_card_type == "Asset Task" or main_card_type == "task asset" or main_card_type == "Task Asset":
        random_task = random.choice ([(x) for x in all_assets if "Task" in (x).tags])
        print (random_task.name)
        all_assets.remove (random_task)
    elif main_card_type == "asset service" or main_card_type == "Asset Service" or main_card_type == "service asset" or main_card_type == "Service Asset":
        random_service = random.choice ([(x) for x in all_assets if "Service" in (x).tags])
        print (random_service.name)
        all_assets.remove (random_service)
    elif main_card_type == "asset relic" or main_card_type == "Asset Relic" or main_card_type == "relic asset" or main_card_type == "Relic Asset":
        random_relic = random.choice ([(x) for x in all_assets if "Relic" in (x).tags])
        print (random_relic.name)
        all_assets.remove (random_relic)
    elif main_card_type == "asset ally" or main_card_type == "Asset Ally" or main_card_type == "ally asset" or main_card_type == "Ally Asset":
        random_ally = random.choice ([(x) for x in all_assets if "Ally" in (x).tags])
        print (random_ally.name)
        all_assets.remove (random_ally)
    elif main_card_type == "asset magical" or main_card_type == "Asset Magical" or main_card_type == "magical asset" or main_card_type == "Magical Asset":
        random_magical = random.choice ([(x) for x in all_assets if "Magical" in (x).tags])
        print (random_magical.name)
        all_assets.remove (random_magical)
    elif main_card_type == "artifact weapon" or main_card_type == "Artifact Weapon" or main_card_type == "weapon artifact" or main_card_type == "Weapon Artifact":
        random_weapon = random.choice ([(x) for x in all_artifacts if "Weapon" in (x).tags])
        print (random_weapon.name)
        all_artifacts.remove (random_weapon)
    elif main_card_type == "artifact" or main_card_type == "Artifact":
        random_artifact = random.choice (all_artifacts)
        print (random_artifact.name)
        all_artifacts.remove (random_artifact)
    elif main_card_type == "artifact item" or main_card_type == "Artifact Item" or main_card_type == "item artifact" or main_card_type == "Item Artifact":
        random_item = random.choice ([(x) for x in all_artifacts if "Item" in (x).tags])
        print (random_item.name)
        all_artifacts.remove (random_item)
    elif main_card_type == "artifact tome" or main_card_type == "Artifact Tome" or main_card_type == "tome artifact" or main_card_type == "Tome Artifact":
        random_tome = random.choice ([(x) for x in all_artifacts if "Tome" in (x).tags])
        print (random_tome.name)
        all_artifacts.remove (random_tome)
    elif main_card_type == "artifact magical" or main_card_type == "Artifact Magical" or main_card_type == "magical artifact" or main_card_type == "Magical Artifact":
        random_magical = random.choice ([(x) for x in all_artifacts if "Magical" in (x).tags])
        print (random_magical.name)
        all_artifacts.remove (random_magical)
    elif main_card_type == "artifact relic" or main_card_type == "Artifact Relic" or main_card_type == "relic artifact" or main_card_type == "Relic Artifact":
        random_relic = random.choice ([(x) for x in all_artifacts if "Relic" in (x).tags])
        print (random_relic.name)
        all_artifacts.remove (random_relic)
    elif main_card_type == "artifact trinket" or main_card_type == "Artifact Trinket" or main_card_type == "trinket artifact" or main_card_type == "Trinket Artifact":
        random_trinket = random.choice ([(x) for x in all_artifacts if "Trinket" in (x).tags])
        print (random_trinket.name)
        all_artifacts.remove (random_trinket)
    elif main_card_type == "artifact elixir" or main_card_type == "Artifact Elixir" or main_card_type == "elixir artifact" or main_card_type == "Elixir Artifact":
        random_elixir = random.choice ([(x) for x in all_artifacts if "Elixir" in (x).tags])
        print (random_elixir.name)
        all_artifacts.remove (random_elixir)
    elif main_card_type == "glamour" or main_card_type == "Glamour":
        random_glamour = random.choice ([(x) for x in all_spells if "Glamour" in (x).tags])
        print (random_glamour.name)
        all_spells.remove (random_glamour)
    elif main_card_type == "spell" or main_card_type == "Spell":
        random_spell = random.choice (all_spells)
        print (random_spell.name)
        all_spells.remove (random_spell)
    elif main_card_type == "incantation" or main_card_type == "Incantation":
        random_incantation = random.choice ([(x) for x in all_spells if "Incantation" in (x).tags])
        print (random_incantation.name)
        all_spells.remove (random_incantation)
    elif main_card_type == "ritual" or main_card_type == "Ritual":
        random_ritual = random.choice ([(x) for x in all_spells if "Ritual" in (x).tags])
        print (random_ritual.name)
        all_spells.remove (random_ritual)
    elif main_card_type == "non glamour" or main_card_type == "Non Glamour" or main_card_type == "nonglamour" or main_card_type == "Nonglamour" or main_card_type == "NonGlamour":
        random_nonglamour = random.choice ([(x) for x in all_spells if "Glamour" not in (x).tags])
        print (random_nonglamour.name)
        all_spells.remove (random_nonglamour)
    elif main_card_type == "non incantation" or main_card_type == "Non Incantation" or main_card_type == "nonincantation" or main_card_type == "Nonincantation" or main_card_type == "NonIncantation":
        random_nonincantation = random.choice ([(x) for x in all_spells if "Incantation" not in (x).tags])
        print (random_nonincantation.name)
        all_spells.remove (random_nonincantation)
    elif main_card_type == "non ritual" or main_card_type == "Non Ritual" or main_card_type == "nonritual" or main_card_type == "Nonritual" or main_card_type == "NonRitual" or  main_card_type == "nonritual":
        random_nonritual = random.choice ([(x) for x in all_spells if "Ritual" not in (x).tags])
        print (random_nonritual.name)
        all_spells.remove (random_nonritual)
    elif main_card_type == "unique weapon" or main_card_type == "Unique Weapon" or main_card_type == "weapon unique" or main_card_type == "Weapon Unique":
        random_weapon = random.choice ([(x) for x in all_unique if "Weapon" in (x).tags])
        print (random_weapon.name)
        all_unique.remove (random_weapon)
    elif main_card_type == "unique" or main_card_type == "Unique":
        random_unique = random.choice (all_unique)
        print (random_unique.name)
        all_unique.remove (random_unique)
    elif main_card_type == "unique tome" or main_card_type == "Unique Tome" or main_card_type == "tome unique" or main_card_type == "Tome Unique":
        random_unique_tome  = random.choice ([(x) for x in all_unique if "Tome" in (x).tags])
        print (random_unique_tome.name)
        all_unique.remove (random_unique_tome)
    elif main_card_type == "character" or main_card_type == "Character":
        random_character = random.choice ([(x) for x in all_unique if "Character" in (x).tags])
        print (random_character.name)
        all_unique.remove (random_character)
    elif  main_card_type == "unique task" or main_card_type == "Unique Task" or main_card_type == "task unique" or main_card_type == "Task Unique":
        random_task = random.choice ([(x) for x in all_unique if "Task" in (x).tags])
        print (random_task.name)
        all_unique.remove (random_task)
    elif  main_card_type == "unique ally" or main_card_type == "Unique Ally" or main_card_type == "ally unique" or main_card_type == "Ally Unique":
        random_ally = random.choice ([(x) for x in all_unique if "Ally" in (x).tags])
        print (random_ally.name)
        all_unique.remove (random_ally)
    elif main_card_type == "unique relic" or main_card_type == "Unique Relic" or main_card_type == "relic unique" or main_card_type == "Relic Unique":
        random_relic = random.choice ([(x) for x in all_unique if "Relic" in (x).tags])
        print (random_relic.name)
        all_unique.remove (random_relic)
    elif main_card_type == "unique item" or main_card_type == "Unique Item" or main_card_type == "item unique" or main_card_type == "Item Unique":
        random_item = random.choice ([(x) for x in all_unique if "Item" in (x).tags])
        print (random_item.name)
        all_unique.remove (random_item)
    elif main_card_type == "unique magical" or main_card_type == "Unique Magical" or main_card_type == "magical unique" or main_card_type == "Magical Unique":
        random_magical = random.choice ([(x) for x in all_unique if "Magical" in (x).tags])
        print (random_magical.name)
        all_unique.remove (random_magical)
    elif main_card_type == "unique tarot" or main_card_type == "Unique Tarot" or main_card_type == "tarot unique" or main_card_type == "Tarot Unique":
        random_tarot = random.choice ([(x) for x in all_unique if "Tarot" in (x).tags])
        print (random_tarot.name)
        all_unique.remove (random_tarot)
    elif main_card_type == "restriction" or main_card_type == "Restriction":
        random_restriction = random.choice ([(x) for x in all_conditions if "Restriction" in (x).tags])
        print (random_restriction.name)
        all_conditions.remove (random_restriction)
    elif main_card_type == "pursuit" or main_card_type == "Pursuit":
        random_pursuit = random.choice ([(x) for x in all_conditions if "Pursuit" in (x).tags])
        print (random_pursuit.name)
        all_conditions.remove (random_pursuit)
    elif main_card_type == "madness" or main_card_type == "Madness":
        random_madness = random.choice ([(x) for x in all_conditions if "Madness" in (x).tags])
        print (random_madness.name)
        all_conditions.remove (random_madness)
    elif main_card_type == "injury" or main_card_type == "Injury":
        random_injury = random.choice ([(x) for x in all_conditions if "Injury" in (x).tags])
        print (random_injury.name)
        all_conditions.remove (random_injury)
    elif main_card_type == "illness" or main_card_type == "Illness":
        random_illness = random.choice ([(x) for x in all_conditions if "Illness" in (x).tags])
        print (random_illness.name)
        all_conditions.remove (random_illness)
    elif main_card_type == "exposure" or main_card_type == "Exposure":
        random_exposure = random.choice ([(x) for x in all_conditions if "Exposure" in (x).tags])
        print (random_exposure.name)
        all_conditions.remove (random_exposure)
    elif main_card_type == "deal" or main_card_type == "Deal":
        random_deal = random.choice ([(x) for x in all_conditions if "Deal" in (x).tags])
        print (random_deal.name)
        all_conditions.remove (random_deal)
    elif main_card_type == "common" or main_card_type == "Common":
        random_common = random.choice ([(x) for x in all_conditions if "Common" in (x).tags])
        print (random_common.name)
        all_conditions.remove (random_common)
    elif main_card_type == "talent" or main_card_type == "Talent":
        random_talent = random.choice ([(x) for x in all_conditions if "Talent" in (x).tags])
        print (random_talent.name)
        all_conditions.remove (random_talent)
    elif main_card_type == "boon" or main_card_type == "Boon":
        random_boon = random.choice ([(x) for x in all_conditions if "Boon" in (x).tags])
        print (random_boon.name)
        all_conditions.remove (random_boon)
    elif main_card_type == "bane" or main_card_type == "Bane":
        random_bane = random.choice ([(x) for x in all_conditions if "Bane" in (x).tags])
        print (random_bane.name)
        all_conditions.remove (random_bane)
    elif main_card_type == "non common deal" or main_card_type == "Non Common Deal" or main_card_type == "noncommon deal" or main_card_type == "Noncommon Deal" or main_card_type == "NonCommon Deal" or main_card_type == "Noncommon Deal":
        random_noncommon_deal = random.choice ([(x) for x in all_conditions if "Deal" in (x).tags and "Common" not in (x).tags])
        print (random_noncommon_deal.name)
        all_conditions.remove (random_noncommon_deal)
    elif main_card_type == "ls":
        print("asset, asset weapon, asset tome, asset item, asset trinket, asset task, asset service, asset relic, asset ally, asset magical, \n artifact, artifact weapon, artifact item, artifact tome, artifact magical, artifact relic, artifact trnket, artifact elixir, \n glamour, spell, incanctation, tirual, non glamour non intantation, non ritual, \n unique, unique weapon, unique tome, character, unique task, unique ally, unique relic, unique item, unique magical, unique tarot, \n restriction, pursuit, madness, injury, ilness, exposure, deal, common, talent, boon, bane, non common deal")
    else:
        print ("invalid format")
